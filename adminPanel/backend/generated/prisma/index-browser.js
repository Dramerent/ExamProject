
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CommentsScalarFieldEnum = {
  comment_id: 'comment_id',
  user_id: 'user_id',
  comment_text: 'comment_text',
  organizer_id: 'organizer_id',
  comment_isVerified: 'comment_isVerified',
  comment_name: 'comment_name',
  post_id: 'post_id'
};

exports.Prisma.CreatedPostsScalarFieldEnum = {
  post_image: 'post_image',
  post_description: 'post_description',
  post_cost: 'post_cost',
  post_meetingPlace: 'post_meetingPlace',
  post_allSeats: 'post_allSeats',
  post_buydSeats: 'post_buydSeats',
  post_checked: 'post_checked',
  organizer_id: 'organizer_id',
  post_id: 'post_id',
  genre_id: 'genre_id',
  post_name: 'post_name',
  post_meetDate: 'post_meetDate',
  post_fullDescription: 'post_fullDescription'
};

exports.Prisma.GenresScalarFieldEnum = {
  genre_id: 'genre_id',
  genre_name: 'genre_name',
  genre_description: 'genre_description',
  sphere_id: 'sphere_id'
};

exports.Prisma.OrganizersScalarFieldEnum = {
  organizer_description: 'organizer_description',
  organizer_verified: 'organizer_verified',
  organizer_phoneNum: 'organizer_phoneNum',
  organizer_id: 'organizer_id',
  sphere_id: 'sphere_id',
  organizer_nickname: 'organizer_nickname',
  user_id: 'user_id',
  organizer_photo: 'organizer_photo',
  callback_id: 'callback_id',
  organizer_reasonToCancel: 'organizer_reasonToCancel'
};

exports.Prisma.ReasonsToRefundScalarFieldEnum = {
  reason_id: 'reason_id',
  reason_name: 'reason_name',
  reason_description: 'reason_description'
};

exports.Prisma.RolesScalarFieldEnum = {
  role_name: 'role_name',
  role_id: 'role_id'
};

exports.Prisma.SphereScalarFieldEnum = {
  sphere_id: 'sphere_id',
  sphere_name: 'sphere_name'
};

exports.Prisma.TicketRefundScalarFieldEnum = {
  ticketRefund_id: 'ticketRefund_id',
  ticketRefind_description: 'ticketRefind_description',
  ticket_id: 'ticket_id',
  ticketRefind_isConfirm: 'ticketRefind_isConfirm',
  reason_id: 'reason_id',
  user_id: 'user_id',
  ticketRefund_quantity: 'ticketRefund_quantity'
};

exports.Prisma.TicketsScalarFieldEnum = {
  ticket_id: 'ticket_id',
  user_id: 'user_id',
  post_id: 'post_id',
  ticket_quantity: 'ticket_quantity',
  ticket_name: 'ticket_name',
  ticket_genre: 'ticket_genre',
  ticket_sphere: 'ticket_sphere',
  ticket_meetPlace: 'ticket_meetPlace',
  ticket_cost: 'ticket_cost',
  ticket_date: 'ticket_date',
  ticket_isHere: 'ticket_isHere',
  ticket_isRefind: 'ticket_isRefind',
  organizer_id: 'organizer_id',
  ticket_image: 'ticket_image'
};

exports.Prisma.UsersScalarFieldEnum = {
  user_name: 'user_name',
  user_surname: 'user_surname',
  user_mail: 'user_mail',
  user_password: 'user_password',
  user_photo: 'user_photo',
  role_id: 'role_id',
  user_id: 'user_id',
  user_likedMass: 'user_likedMass'
};

exports.Prisma.CallbacksScalarFieldEnum = {
  callback_id: 'callback_id',
  callback_name: 'callback_name'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Comments: 'Comments',
  CreatedPosts: 'CreatedPosts',
  Genres: 'Genres',
  Organizers: 'Organizers',
  ReasonsToRefund: 'ReasonsToRefund',
  Roles: 'Roles',
  Sphere: 'Sphere',
  TicketRefund: 'TicketRefund',
  Tickets: 'Tickets',
  Users: 'Users',
  callbacks: 'callbacks'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
